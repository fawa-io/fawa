// Copyright 2025 The fawa Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package proto.fawa.greet.v1;

option go_package = "github.com/fawa-io/fawa/gen/proto/fawa/greet/v1;greetv1";

service GreetService {
  // SayHello is a unary RPC.
  rpc SayHello(SayHelloRequest) returns (SayHelloResponse);

  // GreetStream is a server-streaming RPC.
  rpc GreetStream(GreetStreamRequest) returns (stream GreetStreamResponse);

  // GreetClientStream is a client-streaming RPC.
  rpc GreetClientStream(stream GreetClientStreamRequest) returns (GreetClientStreamResponse);

  // GreetBidiStream is a bidirectional-streaming RPC.
  rpc GreetBidiStream(stream GreetBidiStreamRequest) returns (stream GreetBidiStreamResponse);
}

message SayHelloRequest {
  string name = 1;
}

message SayHelloResponse {
  string resp = 1;
}

message GreetStreamRequest {
  string name = 1;
}

message GreetStreamResponse {
  // A single part of a greeting.
  string part = 1;
}

message GreetClientStreamRequest {
  string name = 1;
}

message GreetClientStreamResponse {
  // A summary of all the greetings.
  string summary = 1;
}

message GreetBidiStreamRequest {
  string name = 1;
}

message GreetBidiStreamResponse {
  // An echo of the request.
  string echo = 1;
}
