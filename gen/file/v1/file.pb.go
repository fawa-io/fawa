// Copyright 2025 The fawa Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: file/v1/file.proto

package filev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SayHelloRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SayHelloRequest) Reset() {
	*x = SayHelloRequest{}
	mi := &file_file_v1_file_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SayHelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SayHelloRequest) ProtoMessage() {}

func (x *SayHelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SayHelloRequest.ProtoReflect.Descriptor instead.
func (*SayHelloRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{0}
}

func (x *SayHelloRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SayHelloResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Resp          string                 `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SayHelloResponse) Reset() {
	*x = SayHelloResponse{}
	mi := &file_file_v1_file_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SayHelloResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SayHelloResponse) ProtoMessage() {}

func (x *SayHelloResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SayHelloResponse.ProtoReflect.Descriptor instead.
func (*SayHelloResponse) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{1}
}

func (x *SayHelloResponse) GetResp() string {
	if x != nil {
		return x.Resp
	}
	return ""
}

type SendFileRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*SendFileRequest_FileName
	//	*SendFileRequest_ChunkData
	Payload       isSendFileRequest_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendFileRequest) Reset() {
	*x = SendFileRequest{}
	mi := &file_file_v1_file_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFileRequest) ProtoMessage() {}

func (x *SendFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFileRequest.ProtoReflect.Descriptor instead.
func (*SendFileRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{2}
}

func (x *SendFileRequest) GetPayload() isSendFileRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *SendFileRequest) GetFileName() string {
	if x != nil {
		if x, ok := x.Payload.(*SendFileRequest_FileName); ok {
			return x.FileName
		}
	}
	return ""
}

func (x *SendFileRequest) GetChunkData() []byte {
	if x != nil {
		if x, ok := x.Payload.(*SendFileRequest_ChunkData); ok {
			return x.ChunkData
		}
	}
	return nil
}

type isSendFileRequest_Payload interface {
	isSendFileRequest_Payload()
}

type SendFileRequest_FileName struct {
	FileName string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3,oneof"`
}

type SendFileRequest_ChunkData struct {
	ChunkData []byte `protobuf:"bytes,2,opt,name=chunk_data,json=chunkData,proto3,oneof"`
}

func (*SendFileRequest_FileName) isSendFileRequest_Payload() {}

func (*SendFileRequest_ChunkData) isSendFileRequest_Payload() {}

type SendFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendFileResponse) Reset() {
	*x = SendFileResponse{}
	mi := &file_file_v1_file_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFileResponse) ProtoMessage() {}

func (x *SendFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFileResponse.ProtoReflect.Descriptor instead.
func (*SendFileResponse) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{3}
}

func (x *SendFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendFileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReceiveFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceiveFileRequest) Reset() {
	*x = ReceiveFileRequest{}
	mi := &file_file_v1_file_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveFileRequest) ProtoMessage() {}

func (x *ReceiveFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveFileRequest.ProtoReflect.Descriptor instead.
func (*ReceiveFileRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{4}
}

func (x *ReceiveFileRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type ReceiveFileResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*ReceiveFileResponse_FileSize
	//	*ReceiveFileResponse_ChunkData
	Payload       isReceiveFileResponse_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceiveFileResponse) Reset() {
	*x = ReceiveFileResponse{}
	mi := &file_file_v1_file_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveFileResponse) ProtoMessage() {}

func (x *ReceiveFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveFileResponse.ProtoReflect.Descriptor instead.
func (*ReceiveFileResponse) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{5}
}

func (x *ReceiveFileResponse) GetPayload() isReceiveFileResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ReceiveFileResponse) GetFileSize() int64 {
	if x != nil {
		if x, ok := x.Payload.(*ReceiveFileResponse_FileSize); ok {
			return x.FileSize
		}
	}
	return 0
}

func (x *ReceiveFileResponse) GetChunkData() []byte {
	if x != nil {
		if x, ok := x.Payload.(*ReceiveFileResponse_ChunkData); ok {
			return x.ChunkData
		}
	}
	return nil
}

type isReceiveFileResponse_Payload interface {
	isReceiveFileResponse_Payload()
}

type ReceiveFileResponse_FileSize struct {
	FileSize int64 `protobuf:"varint,1,opt,name=file_size,json=fileSize,proto3,oneof"`
}

type ReceiveFileResponse_ChunkData struct {
	ChunkData []byte `protobuf:"bytes,2,opt,name=chunk_data,json=chunkData,proto3,oneof"`
}

func (*ReceiveFileResponse_FileSize) isReceiveFileResponse_Payload() {}

func (*ReceiveFileResponse_ChunkData) isReceiveFileResponse_Payload() {}

var File_file_v1_file_proto protoreflect.FileDescriptor

const file_file_v1_file_proto_rawDesc = "" +
	"\n" +
	"\x12file/v1/file.proto\x12\afile.v1\"%\n" +
	"\x0fSayHelloRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"&\n" +
	"\x10SayHelloResponse\x12\x12\n" +
	"\x04resp\x18\x01 \x01(\tR\x04resp\"\\\n" +
	"\x0fSendFileRequest\x12\x1d\n" +
	"\tfile_name\x18\x01 \x01(\tH\x00R\bfileName\x12\x1f\n" +
	"\n" +
	"chunk_data\x18\x02 \x01(\fH\x00R\tchunkDataB\t\n" +
	"\apayload\"F\n" +
	"\x10SendFileResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"1\n" +
	"\x12ReceiveFileRequest\x12\x1b\n" +
	"\tfile_name\x18\x01 \x01(\tR\bfileName\"`\n" +
	"\x13ReceiveFileResponse\x12\x1d\n" +
	"\tfile_size\x18\x01 \x01(\x03H\x00R\bfileSize\x12\x1f\n" +
	"\n" +
	"chunk_data\x18\x02 \x01(\fH\x00R\tchunkDataB\t\n" +
	"\apayload2\xe3\x01\n" +
	"\vFileService\x12A\n" +
	"\bSayHello\x12\x18.file.v1.SayHelloRequest\x1a\x19.file.v1.SayHelloResponse\"\x00\x12C\n" +
	"\bSendFile\x12\x18.file.v1.SendFileRequest\x1a\x19.file.v1.SendFileResponse\"\x00(\x01\x12L\n" +
	"\vReceiveFile\x12\x1b.file.v1.ReceiveFileRequest\x1a\x1c.file.v1.ReceiveFileResponse\"\x000\x01B,Z*github.com/fawa-io/fawa/gen/file/v1;filev1b\x06proto3"

var (
	file_file_v1_file_proto_rawDescOnce sync.Once
	file_file_v1_file_proto_rawDescData []byte
)

func file_file_v1_file_proto_rawDescGZIP() []byte {
	file_file_v1_file_proto_rawDescOnce.Do(func() {
		file_file_v1_file_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_file_v1_file_proto_rawDesc), len(file_file_v1_file_proto_rawDesc)))
	})
	return file_file_v1_file_proto_rawDescData
}

var file_file_v1_file_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_file_v1_file_proto_goTypes = []any{
	(*SayHelloRequest)(nil),     // 0: file.v1.SayHelloRequest
	(*SayHelloResponse)(nil),    // 1: file.v1.SayHelloResponse
	(*SendFileRequest)(nil),     // 2: file.v1.SendFileRequest
	(*SendFileResponse)(nil),    // 3: file.v1.SendFileResponse
	(*ReceiveFileRequest)(nil),  // 4: file.v1.ReceiveFileRequest
	(*ReceiveFileResponse)(nil), // 5: file.v1.ReceiveFileResponse
}
var file_file_v1_file_proto_depIdxs = []int32{
	0, // 0: file.v1.FileService.SayHello:input_type -> file.v1.SayHelloRequest
	2, // 1: file.v1.FileService.SendFile:input_type -> file.v1.SendFileRequest
	4, // 2: file.v1.FileService.ReceiveFile:input_type -> file.v1.ReceiveFileRequest
	1, // 3: file.v1.FileService.SayHello:output_type -> file.v1.SayHelloResponse
	3, // 4: file.v1.FileService.SendFile:output_type -> file.v1.SendFileResponse
	5, // 5: file.v1.FileService.ReceiveFile:output_type -> file.v1.ReceiveFileResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_file_v1_file_proto_init() }
func file_file_v1_file_proto_init() {
	if File_file_v1_file_proto != nil {
		return
	}
	file_file_v1_file_proto_msgTypes[2].OneofWrappers = []any{
		(*SendFileRequest_FileName)(nil),
		(*SendFileRequest_ChunkData)(nil),
	}
	file_file_v1_file_proto_msgTypes[5].OneofWrappers = []any{
		(*ReceiveFileResponse_FileSize)(nil),
		(*ReceiveFileResponse_ChunkData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_file_v1_file_proto_rawDesc), len(file_file_v1_file_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_file_v1_file_proto_goTypes,
		DependencyIndexes: file_file_v1_file_proto_depIdxs,
		MessageInfos:      file_file_v1_file_proto_msgTypes,
	}.Build()
	File_file_v1_file_proto = out.File
	file_file_v1_file_proto_goTypes = nil
	file_file_v1_file_proto_depIdxs = nil
}
